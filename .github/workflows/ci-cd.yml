name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests Inside Docker
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - "5432:5432"
        options: --health-cmd "pg_isready -U test_user -d test_db" --health-interval 5s --health-timeout 5s --health-retries 5

    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB || 'test_db' }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER || 'test_user' }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD || 'test_password' }}
      POSTGRES_HOST: localhost
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY || 'secret' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U $POSTGRES_USER && break
            echo "Waiting for database..."
            sleep 2
          done

      - name: Run Migrations
        run: python manage.py migrate

      - name: Run Tests
        run: python manage.py test

      - name: Run Linting
        run: flake8 .

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t task-management:latest .
